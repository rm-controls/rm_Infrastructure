
name: ros-build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  label:
    types: [created]
  workflow_dispatch:
jobs:
  build:
    if: ${{ github.repository == 'rm-controls/rm_control' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ros-tooling/setup-ros@v0.2
        with:
          required-ros-distributions: noetic
      - uses: ros-tooling/action-ros-ci@v0.2
        id: action_ros_ci_step
        with:
          target-ros1-distro: noetic
      - name: Install Binary
        run: ${{ steps.action_ros_ci_step.outputs.ros-workspace-directory-name }}/install/local_setup.bash
      - name: Package deb
        run: ./.github/scripts/package.sh
      - name: Upload deb package to source
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SOURCE_SSH_HOST }}
          username: ${{ secrets.SOURCE_SSH_NAME }}
          key: ${{ secrets.SOURCE_SSH_KEYGEN }}
          source: "*.deb"
          target: "/usr/local/web/rm-source/ubuntu/incoming/"
      - name: Deploy deb package to source
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SOURCE_SSH_HOST }}
          username: ${{ secrets.SOURCE_SSH_NAME }}
          key: ${{ secrets.SOURCE_SSH_KEYGEN }}
          script: |
                  cd /usr/local/web/rm-source/ubuntu/incoming/
                  reprepro  -s  -b  /usr/local/web/rm-source/ubuntu/  --waitforlock  1000  includedeb focal /usr/local/web/rm-source/ubuntu/incoming/*.deb && \
                  rm -f *.deb
